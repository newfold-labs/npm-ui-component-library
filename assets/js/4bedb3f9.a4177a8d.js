"use strict";(self.webpackChunknewfold_ui_docs=self.webpackChunknewfold_ui_docs||[]).push([[5432],{8558:(e,o,n)=>{n.d(o,{Z:()=>u});var a=n(7294),t=n(4184),l=n.n(t),i=n(5697),s=n.n(i),p=n(5667);const c=(0,a.forwardRef)((({id:e,name:o,value:n,label:t,disabled:i,className:s,...c},r)=>(0,a.createElement)("div",{className:l()("nfd-checkbox",i&&"nfd-checkbox--disabled",s)},(0,a.createElement)("input",{ref:r,type:"checkbox",id:e,name:o,value:n,disabled:i,className:"nfd-checkbox__input",...c}),(0,a.createElement)(p.Z,{htmlFor:e,className:"nfd-checkbox__label",label:t})))),r={id:s().string.isRequired,name:s().string.isRequired,value:s().string.isRequired,label:s().string.isRequired,className:s().string,disabled:s().bool};c.propTypes=r,c.defaultProps={className:""};const d=e=>(0,a.createElement)(c,{...e});d.propTypes=r,d.defaultProps=c.defaultProps,d.displayName="Checkbox";const u=c},5667:(e,o,n)=>{n.d(o,{Z:()=>d});var a=n(7294),t=n(4184),l=n.n(t),i=n(5697),s=n.n(i);const p=(0,a.forwardRef)((({as:e,className:o,label:n,children:t,...i},s)=>(0,a.createElement)(e,{ref:s,className:l()("nfd-label",o),...i},n||t||null))),c={label:s().string,children:s().string,as:s().elementType,className:s().string};p.propTypes=c,p.defaultProps={label:"",children:"",as:"label",className:""};const r=e=>(0,a.createElement)(p,{...e});r.propTypes=c,r.defaultProps=p.defaultProps,r.displayName="Label";const d=p},7617:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>w,contentTitle:()=>T,default:()=>_,frontMatter:()=>N,metadata:()=>G,toc:()=>O});var a=n(7462),t=n(7294),l=n(3905),i=n(2504),s=n(1629);const p={toc:[{value:"1. Options as Array",id:"1-options-as-array",level:4},{value:"2. Options as Children",id:"2-options-as-children",level:4}]},c="wrapper";function r(e){let{components:o,...n}=e;return(0,l.kt)(c,(0,a.Z)({},p,n,{components:o,mdxType:"MDXLayout"}),(0,l.kt)("h4",{id:"1-options-as-array"},"1. Options as Array"),(0,l.kt)("p",null,"Use the ",(0,l.kt)("inlineCode",{parentName:"p"},"options")," prop to pass an array of options to the component.\nEach option must be an object with a string ",(0,l.kt)("inlineCode",{parentName:"p"},"label")," and a string ",(0,l.kt)("inlineCode",{parentName:"p"},"value")," property."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},"<CheckboxGroup \n    id=\"checkbox-group-array\"\n    label=\"A checkbox group\"\n    onChange={handleChange}\n    options={[\n        { label: 'Option 1', value: '1' },\n        { label: 'Option 2', value: '2' },\n        { label: 'Option 3', value: '3' },\n        { label: 'Option 4', value: '4' }\n    ]}\n    values={['1', '3']}\n/>\n")),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"},"If you want to have pre-selected options, you must pass an array to the\n",(0,l.kt)("inlineCode",{parentName:"p"},"values")," prop with the values of the options you wish to be selected.")),(0,l.kt)("h4",{id:"2-options-as-children"},"2. Options as Children"),(0,l.kt)("p",null,"You can pass options as children to the component. Each child must be\nan instance of ",(0,l.kt)("inlineCode",{parentName:"p"},"CheckboxGroup.Checkbox")," sub-component."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},'<CheckboxGroup \n    id="checkbox-group-children"\n    label="A checkbox group"\n    name="checkbox-group-children"\n    onChange={handleChange}\n>\n    <CheckboxGroup.Checkbox\n        checked\n        id="checkbox-group-option-1"\n        label="Option 1"\n        name="checkbox-group-children"\n        value="1"\n    />\n    <CheckboxGroup.Checkbox\n        id="checkbox-group-option-2"\n        label="Option 2"\n        name="checkbox-group-children"\n        value="2"\n    />\n    <CheckboxGroup.Checkbox\n        id="checkbox-group-option-3"\n        label="Option 3"\n        name="checkbox-group-children"\n        value="3"\n    />\n    <CheckboxGroup.Checkbox\n        id="checkbox-group-option-4"\n        label="Option 4"\n        name="checkbox-group-children"\n        value="4"\n    />\n</CheckboxGroup>\n')),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"},"This method is uncontrolled. So you have to manage the state of each\ncheckbox individually. And since the ",(0,l.kt)("inlineCode",{parentName:"p"},"CheckboxGroup.Checkbox")," sub-component is mostly\na wrapper around the native ",(0,l.kt)("inlineCode",{parentName:"p"},'input[type="checkbox"]')," element, you can use the ",(0,l.kt)("inlineCode",{parentName:"p"},"checked"),"\nattribute as a prop to do that.")))}r.isMDXComponent=!0;var d=n(4184),u=n.n(d),h=n(6486),b=n(5697),k=n.n(b),m=n(8558),x=n(5667);const g=({children:e=null,id:o="",name:n="",values:a=[],label:l="",description:i="",disabled:s=!1,options:p,onChange:c=h.noop,className:r="",...d})=>{const b=(0,t.useCallback)((({target:e})=>{if(e.checked&&!(0,h.includes)(a,e.value))return c([...a,e.value]);c((0,h.without)(a,e.value))}),[a,c]);return(0,t.createElement)("fieldset",{id:`checkbox-group-${o}`,className:u()("nfd-checkbox-group",s&&"nfd-checkbox-group--disabled",r)},(0,t.createElement)(x.Z,{as:"legend",className:"nfd-checkbox-group__label",label:l}),i&&(0,t.createElement)("div",{className:"nfd-checkbox-group__description"},i),(0,t.createElement)("div",{className:"nfd-checkbox-group__options"},e||p.map(((e,l)=>{const i=`checkbox-${o}-${l}`;return(0,t.createElement)(m.Z,{key:i,id:i,name:n,value:e.value,label:e.label,checked:(0,h.includes)(a,e.value),disabled:s,onChange:b,...d})}))))};g.propTypes={children:k().node,id:k().string,name:k().string,values:k().arrayOf(k().string),label:k().string,disabled:k().bool,description:k().string,options:k().arrayOf(k().shape({value:k().string.isRequired,label:k().string.isRequired})),onChange:k().func,className:k().string},(g.Checkbox=m.Z).displayName="CheckboxGroup.Checkbox";const C=g,v=[{label:"Option 1",value:"1"},{label:"Option 2",value:"2"},{label:"Option 3",value:"3"},{label:"Option 4",value:"4"}],f=e=>{let{id:o="checkbox-group",label:n="A checkbox group",values:a=[],disabled:l=!1,description:i=""}=e;const[s,p]=(0,t.useState)(a);return t.createElement(C,{id:o,label:n,onChange:p,options:v,values:s,description:i,disabled:l})},y={id:{type:"string",description:"The id of the checkbox group."},name:{type:"string"},values:{type:"array",description:"The values of the selected checkboxes."},options:{type:"array",description:"The options for the checkbox group."},children:{type:"node",description:"You can use `CheckboxGroup.Checkbox` sub-components as children instead of passing `options`."},label:{type:"string",description:"The label for the checkbox group."},description:{type:"string",description:"The description for the checkbox group."},onChange:{type:"function",description:"The function to call when the checkbox group changes. The function will receive the new values (array) as an argument."},disabled:{type:"bool",description:"Whether the checkbox group is disabled."},className:{type:"string"}},N={},T="Checkbox Group",G={unversionedId:"components/checkbox-group",id:"components/checkbox-group",title:"Checkbox Group",description:"The CheckboxGroup allows users to select one or more items from a list of choices.",source:"@site/docs/components/checkbox-group.mdx",sourceDirName:"components",slug:"/components/checkbox-group",permalink:"/npm-ui-component-library/docs/components/checkbox-group",draft:!1,editUrl:"https://github.com/newfold-labs/npm-ui-component-library/docs/docs/components/checkbox-group.mdx",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Card",permalink:"/npm-ui-component-library/docs/components/card"},next:{title:"Children Limiter",permalink:"/npm-ui-component-library/docs/components/children-limiter"}},w={},O=[{value:"Usage",id:"usage",level:3},{value:"Options",id:"options",level:3},{value:"Label",id:"label",level:3},{value:"Description",id:"description",level:3},{value:"Disabled",id:"disabled",level:3},{value:"Props",id:"props",level:3}],D={toc:O},E="wrapper";function _(e){let{components:o,...n}=e;return(0,l.kt)(E,(0,a.Z)({},D,n,{components:o,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"checkbox-group"},"Checkbox Group"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"CheckboxGroup")," allows users to select one or more items from a list of choices."),(0,l.kt)(s.Z,{mdxType:"NewfoldRoot"},(0,l.kt)(f,{values:["1","3"],mdxType:"CheckboxGroupDemo"})),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"usage"},"Usage"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},"import { CheckboxGroup } from \"@newfold/ui-component-library\";\n\nconst options = [\n    { label: 'Option 1', value: '1' },\n    { label: 'Option 2', value: '2' },\n    { label: 'Option 3', value: '3' },\n    { label: 'Option 4', value: '4' }\n];\n\n<CheckboxGroup\n    id=\"checkbox-group\"\n    label=\"A checkbox group\"\n    onChange={handleChange}\n    options={options}\n    values={['1', '3']}\n/>\n")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"options"},"Options"),(0,l.kt)("p",null,"You can pass options to the ",(0,l.kt)("inlineCode",{parentName:"p"},"CheckboxGroup")," component in two ways.\nYou can pass them as an array of objects to the ",(0,l.kt)("inlineCode",{parentName:"p"},"options")," prop, or\nyou can pass them as children to the component."),(0,l.kt)(r,{mdxType:"CheckboxGroupOptions"}),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"label"},"Label"),(0,l.kt)("p",null,"Use the ",(0,l.kt)("inlineCode",{parentName:"p"},"label")," prop to add a label to the ",(0,l.kt)("inlineCode",{parentName:"p"},"CheckboxGroup")," component."),(0,l.kt)(s.Z,{mdxType:"NewfoldRoot"},(0,l.kt)(f,{id:"checkbox-group-label",values:["2","3"],label:"This is a label",mdxType:"CheckboxGroupDemo"})),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},'<CheckboxGroup\n    id="checkbox-group-label"\n    onChange={handleChange}\n    options={options}\n    values={selectedValues}\n    label="This is a label"\n/>\n')),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"description"},"Description"),(0,l.kt)("p",null,"Use the ",(0,l.kt)("inlineCode",{parentName:"p"},"description")," prop to add a description to the ",(0,l.kt)("inlineCode",{parentName:"p"},"CheckboxGroup")," component."),(0,l.kt)(s.Z,{mdxType:"NewfoldRoot"},(0,l.kt)(f,{id:"checkbox-group-description",values:["2","3"],description:"This is a description for the checkbox group",mdxType:"CheckboxGroupDemo"})),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},'<CheckboxGroup\n    id="checkbox-group-description"\n    onChange={handleChange}\n    options={options}\n    values={selectedValues}\n    label="This is a label"\n    description="This is a description for the checkbox group"\n/>\n')),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"disabled"},"Disabled"),(0,l.kt)("p",null,"Use the ",(0,l.kt)("inlineCode",{parentName:"p"},"disabled")," prop to disable the ",(0,l.kt)("inlineCode",{parentName:"p"},"CheckboxGroup")," component."),(0,l.kt)(s.Z,{mdxType:"NewfoldRoot"},(0,l.kt)(f,{id:"checkbox-group-disabled",values:["2","3"],label:"Disabled checkbox group",disabled:!0,mdxType:"CheckboxGroupDemo"})),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},'<CheckboxGroup\n    id="checkbox-group-disabled"\n    label="Disabled checkbox group"\n    onChange={handleChange}\n    options={options}\n    values={selectedValues}\n    disabled\n/>\n')),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"props"},"Props"),(0,l.kt)(i.Z.Table,{docs:y}))}_.isMDXComponent=!0}}]);