"use strict";(self.webpackChunknewfold_ui_docs=self.webpackChunknewfold_ui_docs||[]).push([[3545],{5667:(e,t,n)=>{n.d(t,{Z:()=>i});var l=n(7294),a=n(4184),p=n.n(a),r=n(5697),s=n.n(r);const u=(0,l.forwardRef)((({as:e,className:t,label:n,children:a,...r},s)=>(0,l.createElement)(e,{ref:s,className:p()("nfd-label",t),...r},n||a||null))),d={label:s().string,children:s().string,as:s().elementType,className:s().string};u.propTypes=d,u.defaultProps={label:"",children:"",as:"label",className:""};const o=e=>(0,l.createElement)(u,{...e});o.propTypes=d,o.defaultProps=u.defaultProps,o.displayName="Label";const i=u},8748:(e,t,n)=>{n.d(t,{Z:()=>o});var l=n(7294),a=n(4184),p=n.n(a),r=n(5697),s=n.n(r);const u=(0,l.forwardRef)((({type:e,className:t,disabled:n,readOnly:a,...r},s)=>(0,l.createElement)("input",{ref:s,type:e,className:p()("nfd-text-input",n&&"nfd-text-input--disabled",a&&"nfd-text-input--read-only",t),disabled:n,readOnly:a,...r}))),d={type:s().string,className:s().string,disabled:s().bool,readOnly:s().bool};u.propTypes=d,u.defaultProps={type:"text",className:"",disabled:!1,readOnly:!1};const o=u,i=e=>(0,l.createElement)(u,{...e});i.propTypes=d,i.defaultProps=u.defaultProps,i.displayName="TextInput"},8711:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>x,frontMatter:()=>o,metadata:()=>m,toc:()=>b});var l=n(7462),a=(n(7294),n(3905)),p=n(2504),r=n(1629),s=n(8748),u=n(5667);const d={type:{type:["string"],description:"The type of the input.",defaultValue:"text"},disabled:{type:"bool",defaultValue:"false"},readOnly:{type:"bool",defaultValue:"false"},className:{type:"string"}},o={},i="Text Input",m={unversionedId:"elements/text-input",id:"elements/text-input",title:"Text Input",description:"A simple text input component. Accept all props of a regular input element.",source:"@site/docs/elements/text-input.mdx",sourceDirName:"elements",slug:"/elements/text-input",permalink:"/npm-ui-component-library/docs/elements/text-input",draft:!1,editUrl:"https://github.com/newfold-labs/npm-ui-component-library/docs/docs/elements/text-input.mdx",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Tag Input",permalink:"/npm-ui-component-library/docs/elements/tag-input"},next:{title:"Textarea",permalink:"/npm-ui-component-library/docs/elements/textarea"}},c={},b=[{value:"Usage",id:"usage",level:3},{value:"HTML Attributes",id:"html-attributes",level:3},{value:"Label",id:"label",level:3},{value:"Disabled",id:"disabled",level:3},{value:"Read Only",id:"read-only",level:3},{value:"Props",id:"props",level:3}],y={toc:b},k="wrapper";function x(e){let{components:t,...n}=e;return(0,a.kt)(k,(0,l.Z)({},y,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"text-input"},"Text Input"),(0,a.kt)("p",null,"A simple text input component. Accept all props of a regular input element."),(0,a.kt)(r.Z,{mdxType:"NewfoldRoot"},(0,a.kt)(s.Z,{mdxType:"TextInput"})),(0,a.kt)("h3",{id:"usage"},"Usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'import { TextInput } from "@newfold/ui-component-library";\n\n<TextInput />\n')),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"html-attributes"},"HTML Attributes"),(0,a.kt)("p",null,"Since the Text Input component is a wrapper around a regular input element, all attributes of a regular input element are accepted."),(0,a.kt)("p",null,"For example, here's an input type ",(0,a.kt)("inlineCode",{parentName:"p"},"number")," with a ",(0,a.kt)("inlineCode",{parentName:"p"},"placeholder")," and an ",(0,a.kt)("inlineCode",{parentName:"p"},"id"),"."),(0,a.kt)(r.Z,{mdxType:"NewfoldRoot"},(0,a.kt)(s.Z,{type:"number",placeholder:"Enter a number",id:"number-input",mdxType:"TextInput"})),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'<TextInput \n    type="number"\n    placeholder="Enter a number"\n    id="number-input"\n/>\n')),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"label"},"Label"),(0,a.kt)("p",null,"You can use the ",(0,a.kt)("a",{parentName:"p",href:"./label"},(0,a.kt)("inlineCode",{parentName:"a"},"Label"))," component to add a label to your text input."),(0,a.kt)(r.Z,{mdxType:"NewfoldRoot"},(0,a.kt)(u.Z,{htmlFor:"number-input-label",label:"Your lucky number:",className:"nfd-cursor-pointer",mdxType:"Label"}),(0,a.kt)(s.Z,{type:"number",placeholder:"Enter a number",id:"number-input-label",className:"nfd-mt-2",mdxType:"TextInput"})),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'import { Label, TextInput } from "@newfold/ui-component-library";\n\n<Label \n    htmlFor="number-input-label"\n    label="Your lucky number:"\n    className="nfd-cursor-pointer"\n/>\n<TextInput \n    type="number"\n    placeholder="Enter a number"\n    id="number-input-label"\n    className="nfd-mt-2"\n/>\n')),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"disabled"},"Disabled"),(0,a.kt)("p",null,"You can disable the text input by passing the ",(0,a.kt)("inlineCode",{parentName:"p"},"disabled")," prop."),(0,a.kt)(r.Z,{mdxType:"NewfoldRoot"},(0,a.kt)(s.Z,{type:"url",placeholder:"Website URL",disabled:!0,mdxType:"TextInput"})),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'<TextInput \n    type="url"\n    placeholder="Website URL"\n    disabled={true}\n/>\n')),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"read-only"},"Read Only"),(0,a.kt)("p",null,"You can make the text input read only by passing the ",(0,a.kt)("inlineCode",{parentName:"p"},"readOnly")," prop."),(0,a.kt)(r.Z,{mdxType:"NewfoldRoot"},(0,a.kt)(s.Z,{type:"url",value:"https://maze.toys/mazes/mini/daily/",readOnly:!0,mdxType:"TextInput"})),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'<TextInput \n    type="url"\n    value="https://maze.toys/mazes/mini/daily/"\n    readOnly\n/>\n')),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"props"},"Props"),(0,a.kt)(p.Z.Table,{docs:d}))}x.isMDXComponent=!0}}]);