"use strict";(self.webpackChunknewfold_ui_docs=self.webpackChunknewfold_ui_docs||[]).push([[8146],{9092:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>u,default:()=>g,frontMatter:()=>m,metadata:()=>a,toc:()=>h});var i=t(7462),r=(t(7294),t(3905)),o=t(2504),l=t(1629),p=t(5956),s=t(7299);const d={limit:{type:"number",description:"The maximum number of children to reveal on initial render.",isRequired:!0},children:{type:"node",isRequired:!0},renderButton:{type:"function",description:"Render the toggle button. Receives `show`, `toggle` and `ariaProps`.",isRequired:!0},initialShow:{type:"bool",description:"Whether to show the children initially.",defaultValue:"false"},id:{type:"string"}},m={},u="Children Limiter",a={unversionedId:"components/children-limiter",id:"components/children-limiter",title:"Children Limiter",description:"The ChildrenLimiter component is used to limit the number of children that are rendered.",source:"@site/docs/components/children-limiter.mdx",sourceDirName:"components",slug:"/components/children-limiter",permalink:"/npm-ui-component-library/docs/components/children-limiter",draft:!1,editUrl:"https://github.com/newfold-labs/npm-ui-component-library/docs/docs/components/children-limiter.mdx",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Checkbox Group",permalink:"/npm-ui-component-library/docs/components/checkbox-group"},next:{title:"Feature Feature",permalink:"/npm-ui-component-library/docs/components/feature-upsell"}},c={},h=[{value:"Usage",id:"usage",level:3},{value:"Props",id:"props",level:3}],k={toc:h},f="wrapper";function g(e){let{components:n,...t}=e;return(0,r.kt)(f,(0,i.Z)({},k,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"children-limiter"},"Children Limiter"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"ChildrenLimiter")," component is used to limit the number of children that are rendered.\nIt is useful for limiting the number of items in a list."),(0,r.kt)(l.Z,{mdxType:"NewfoldRoot"},(0,r.kt)(p.Z,{limit:5,renderButton:e=>{let{show:n,toggle:t,ariaProps:o}=e;return(0,r.kt)(s.ZP,(0,i.Z)({className:"nfd-my-1.5",onClick:t},o,{mdxType:"Button"}),n?"Show Less":"Show More")},mdxType:"ChildrenLimiter"},(0,r.kt)("p",null,"0"),(0,r.kt)("p",null,"1"),(0,r.kt)("p",null,"2"),(0,r.kt)("p",null,"3"),(0,r.kt)("p",null,"4"),(0,r.kt)("p",null,"5"),(0,r.kt)("p",null,"6"),(0,r.kt)("p",null,"7"),(0,r.kt)("p",null,"8"),(0,r.kt)("p",null,"9"))),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"usage"},"Usage"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'import { ChildrenLimiter } from "@newfold/ui-component-library";\n\n<ChildrenLimiter\n    limit={5}\n    renderButton={({ show, toggle, ariaProps }) => {\n        return (\n            <Button onClick={toggle} {...ariaProps}>\n                {show ? "Show Less" : "Show More"}\n            </Button>\n        );\n    }}\n>\n    <p>0</p>\n    <p>1</p>\n    <p>2</p>\n    <p>3</p>\n    <p>4</p>\n    <p>5</p>\n    <p>6</p>\n    <p>7</p>\n    <p>8</p>\n    <p>9</p>\n</ChildrenLimiter>\n')),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"props"},"Props"),(0,r.kt)(o.Z.Table,{docs:d}))}g.isMDXComponent=!0}}]);