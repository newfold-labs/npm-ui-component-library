"use strict";(self.webpackChunknewfold_ui_docs=self.webpackChunknewfold_ui_docs||[]).push([[1544],{1523:(e,t,n)=>{n.d(t,{Z:()=>r});var l=n(7294),o=n(5697),a=n.n(o),i=n(6486),p=n(4184),d=n.n(p);const c={variant:{success:"nfd-validation-message--success",warning:"nfd-validation-message--warning",info:"nfd-validation-message--info",error:"nfd-validation-message--error"}},u=({as:e="p",variant:t="info",children:n,className:o="",...a})=>(0,l.createElement)(e,{...a,className:d()("nfd-validation-message",c.variant[t],o)},n);u.propTypes={as:a().elementType,variant:a().oneOf((0,i.keys)(c.variant)),message:a().node,className:a().string,children:a().node.isRequired};const r=u},6247:(e,t,n)=>{n.d(t,{Z:()=>a});var l=n(7294),o=n(6486);const a=(e,t)=>{const n=(0,l.useMemo)((()=>(0,o.reduce)(t,((t,n,l)=>n?(t[l]=`${e}__${l}`,t):t),{})),[e,t]),a=(0,l.useMemo)((()=>(0,o.values)(n).join(" ")||null),[n]);return{ids:n,describedBy:a}}},7910:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>x,contentTitle:()=>w,default:()=>R,frontMatter:()=>N,metadata:()=>T,toc:()=>Q});var l=n(7462),o=n(7294),a=n(3905),i=n(1629),p=n(2504),d=n(4184),c=n.n(d),u=n(5697),r=n.n(u),s=n(1471),m=n(1523),h=n(6247);const v=(0,o.forwardRef)((({id:e,label:t,description:n,validation:l,className:a,...i},p)=>{const{ids:d,describedBy:u}=(0,h.Z)(e,{validation:null==l?void 0:l.message,description:n});return(0,o.createElement)("div",{className:c()("nfd-autocomplete-field",a)},(0,o.createElement)(s.Z,{ref:p,id:e,label:t,labelProps:{as:"label",className:"nfd-label nfd-autocomplete-field__label"},validation:l,className:"nfd-autocomplete-field__select",buttonProps:{"aria-describedby":u},...i}),(null==l?void 0:l.message)&&(0,o.createElement)(m.Z,{variant:null==l?void 0:l.variant,id:d.validation,className:"nfd-autocomplete-field__validation"},l.message),n&&(0,o.createElement)("div",{id:d.description,className:"nfd-autocomplete-field__description"},n))})),g={id:r().string.isRequired,name:r().string.isRequired,label:r().string.isRequired,description:r().node,validation:r().shape({variant:r().string,message:r().node}),className:r().string};v.propTypes=g,v.defaultProps={validation:{},className:""},v.Option=s.Z.Option,v.Option.displayName="AutocompleteField.Option";const O=e=>(0,o.createElement)(v,{...e});O.propTypes=g,O.defaultProps=v.defaultProps,O.displayName="AutocompleteField";const A=v,f=[{value:"1",label:"Option 1"},{value:"2",label:"Option 2"},{value:"3",label:"Option 3"}],F=e=>{let{label:t,selectedLabel:n="",placeholder:l="Type to autocomplete options",value:a="",description:i,validation:p,nullable:d=!1}=e;const[c,u]=(0,o.useState)(a),[r,s]=(0,o.useState)(n),[m,h]=(0,o.useState)(f),v=(0,o.useRef)(!0);(0,o.useEffect)((()=>{v.current?v.current=!1:s(c?f.find((e=>e.value===c)).label:"")}),[c]);return o.createElement(A,{id:"autocomplete-field-select",onChange:e=>u(e),onQueryChange:e=>{const{value:t}=e.target;if(!t)return h(f);return h((()=>{if(f.length>0)return f.filter((e=>e.label.toLowerCase().includes(t.toLowerCase())))}))},placeholder:l,value:c,selectedLabel:r,label:t,validation:p,description:i,nullable:d},m.map((e=>o.createElement(A.Option,{key:e.value,value:e.value},e.label))))},k={toc:[{value:"Success",id:"success",level:4},{value:"Warning",id:"warning",level:4},{value:"Info",id:"info",level:4},{value:"Error",id:"error",level:4}]},b="wrapper";function y(e){let{components:t,...n}=e;return(0,a.kt)(b,(0,l.Z)({},k,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h4",{id:"success"},"Success"),(0,a.kt)(i.Z,{mdxType:"NewfoldRoot"},(0,a.kt)(F,{label:"Success validation variant",value:"1",selectedLabel:"Option 1",validation:{variant:"success",message:"Success unlocked. Keep soaring!"},mdxType:"AutocompleteFieldDemo"})),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'<AutocompleteField\n    id="autocomplete-field-select-success"\n    onChange={handleChange}\n    onQueryChange={handleQueryChange}\n    label="Success validation variant"\n    validation={{ \n        variant: "success", \n        message: "Success unlocked. Keep soaring!\'"\n    }}\n>\n    <AutocompleteField.Option value="1">\n        Option 1\n    </AutocompleteField.Option>\n    <AutocompleteField.Option value="2">\n        Option 2\n    </AutocompleteField.Option>\n    <AutocompleteField.Option value="3">\n        Option 3\n    </AutocompleteField.Option>\n</AutocompleteField>\n')),(0,a.kt)("h4",{id:"warning"},"Warning"),(0,a.kt)(i.Z,{mdxType:"NewfoldRoot"},(0,a.kt)(F,{label:"Warning validation variant",value:"1",selectedLabel:"Option 1",validation:{variant:"warning",message:"Caution: Proceed with care to avoid potential pitfalls."},mdxType:"AutocompleteFieldDemo"})),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'<AutocompleteField\n    id="autocomplete-field-select-warning"\n    onChange={handleChange}\n    onQueryChange={handleQueryChange}\n    label="Warning validation variant"\n    validation={{ \n        variant: "warning", \n        message: "Caution: Proceed with care to avoid potential pitfalls."\n    }}\n>\n    <AutocompleteField.Option value="1">\n        Option 1\n    </AutocompleteField.Option>\n    <AutocompleteField.Option value="2">\n        Option 2\n    </AutocompleteField.Option>\n    <AutocompleteField.Option value="3">\n        Option 3\n    </AutocompleteField.Option>\n</AutocompleteField>\n')),(0,a.kt)("h4",{id:"info"},"Info"),(0,a.kt)(i.Z,{mdxType:"NewfoldRoot"},(0,a.kt)(F,{label:"Info validation variant",value:"1",selectedLabel:"Option 1",validation:{variant:"info",message:"Information: Knowledge is the key to empowerment."},mdxType:"AutocompleteFieldDemo"})),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'<AutocompleteField\n    id="autocomplete-field-select-info"\n    onChange={handleChange}\n    onQueryChange={handleQueryChange}\n    label="Info validation variant"\n    validation={{ \n        variant: "info", \n        message: "Information: Knowledge is the key to empowerment." \n    }}\n>\n    <AutocompleteField.Option value="1">\n        Option 1\n    </AutocompleteField.Option>\n    <AutocompleteField.Option value="2">\n        Option 2\n    </AutocompleteField.Option>\n    <AutocompleteField.Option value="3">\n        Option 3\n    </AutocompleteField.Option>\n</AutocompleteField>\n')),(0,a.kt)("h4",{id:"error"},"Error"),(0,a.kt)(i.Z,{mdxType:"NewfoldRoot"},(0,a.kt)(F,{label:"Error validation variant",value:"1",selectedLabel:"Option 1",validation:{variant:"error",message:"Error: Connection lost. Please reconnect."},mdxType:"AutocompleteFieldDemo"})),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'<AutocompleteField\n    id="autocomplete-field-select-error"\n    onChange={handleChange}\n    onQueryChange={handleQueryChange}\n    label="Error validation variant"\n    validation={{ \n        variant: "error", \n        message: "Error: Connection lost. Please reconnect." \n    }}\n>\n    <AutocompleteField.Option value="1">\n        Option 1\n    </AutocompleteField.Option>\n    <AutocompleteField.Option value="2">\n        Option 2\n    </AutocompleteField.Option>\n    <AutocompleteField.Option value="3">\n        Option 3\n    </AutocompleteField.Option>\n</AutocompleteField>\n')))}y.isMDXComponent=!0;const C={id:{type:"string",description:"HTML id attribute.",isRequired:!0},value:{type:["string","number","bool"]},placeholder:{type:"string"},children:{type:"node",description:"Pass `AutocompleteField.Option` components as children"},selectedLabel:{type:"string",description:"The label of the selected option."},label:{type:"string",description:"The label of the autocomplete input."},labelProps:{type:"object"},labelSuffix:{type:"node"},description:{type:"node",description:"Content to be displayed below the input."},onChange:{type:"function",description:"Callback function that is fired when an item has been selected.",isRequired:!0},onQueryChange:{type:"function",description:"Callback function that is fired when the query changes.",isRequired:!0},validation:{type:"{ variant: string, message: node }",description:"Validation state and message"},nullable:{type:"bool",description:"If true, the user can clear the selected value with `X` button."},buttonProps:{type:"object",description:"Props to be passed to the `X` button element."},clearButtonScreenReaderText:{type:"string",description:"Screen reader text for the clear button.",defaultValue:"Clear"},className:{type:"string"}},N={},w="Autocomplete Field",T={unversionedId:"components/autocomplete-field",id:"components/autocomplete-field",title:"Autocomplete Field",description:"The AutocompleteField is a text/select input equipped with a panel of suggested options when users start typing.",source:"@site/docs/components/autocomplete-field.mdx",sourceDirName:"components",slug:"/components/autocomplete-field",permalink:"/npm-ui-component-library/docs/components/autocomplete-field",draft:!1,editUrl:"https://github.com/newfold-labs/npm-ui-component-library/docs/docs/components/autocomplete-field.mdx",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Components",permalink:"/npm-ui-component-library/docs/category/components"},next:{title:"Card",permalink:"/npm-ui-component-library/docs/components/card"}},x={},Q=[{value:"Usage",id:"usage",level:3},{value:"Label",id:"label",level:3},{value:"Placeholder",id:"placeholder",level:3},{value:"Selected Label",id:"selected-label",level:3},{value:"Nullable",id:"nullable",level:3},{value:"onChange",id:"onchange",level:3},{value:"onQueryChange",id:"onquerychange",level:3},{value:"Validation",id:"validation",level:3},{value:"Props",id:"props",level:3}],S={toc:Q},L="wrapper";function R(e){let{components:t,...n}=e;return(0,a.kt)(L,(0,l.Z)({},S,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"autocomplete-field"},"Autocomplete Field"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"AutocompleteField")," is a text/select input equipped with a panel of suggested options when users start typing."),(0,a.kt)(i.Z,{mdxType:"NewfoldRoot"},(0,a.kt)(F,{mdxType:"AutocompleteFieldDemo"})),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"usage"},"Usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'<AutocompleteField\n    id="autocomplete-field-select"\n    onChange={handleChange}\n    onQueryChange={handleQueryChange}\n    placeholder="Type to autocomplete options"\n    value=""\n>\n    <AutocompleteField.Option value="1">\n        Option 1\n    </AutocompleteField.Option>\n    <AutocompleteField.Option value="2">\n        Option 2\n    </AutocompleteField.Option>\n    <AutocompleteField.Option value="3">\n        Option 3\n    </AutocompleteField.Option>\n</AutocompleteField>\n')),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"The ",(0,a.kt)("inlineCode",{parentName:"p"},"AutocompleteField")," component is mostly a wrapper around the ",(0,a.kt)("a",{parentName:"p",href:"../elements/autocomplete"},(0,a.kt)("inlineCode",{parentName:"a"},"Autocomplete"))," element.\nSo any props that are available to the ",(0,a.kt)("a",{parentName:"p",href:"../elements/autocomplete"},(0,a.kt)("inlineCode",{parentName:"a"},"Autocomplete"))," element are\nalso available to the ",(0,a.kt)("inlineCode",{parentName:"p"},"AutocompleteField")," component. The diffrence is the ",(0,a.kt)("inlineCode",{parentName:"p"},"AutocompleteField"),"\ncomponent supports ",(0,a.kt)("a",{parentName:"p",href:"#validation"},"validation variants and messages"),".")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"label"},"Label"),(0,a.kt)("p",null,"An example with a label using ",(0,a.kt)("inlineCode",{parentName:"p"},"label")," prop."),(0,a.kt)(i.Z,{mdxType:"NewfoldRoot"},(0,a.kt)(F,{label:"Select an Option",mdxType:"AutocompleteFieldDemo"})),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'<AutocompleteField\n    id="autocomplete-field-select-label"\n    onChange={handleChange}\n    onQueryChange={handleQueryChange}\n    placeholder="Type to autocomplete options"\n    value=""\n    label="Select an Option"\n>\n    <AutocompleteField.Option value="1">\n        Option 1\n    </AutocompleteField.Option>\n    <AutocompleteField.Option value="2">\n        Option 2\n    </AutocompleteField.Option>\n    <AutocompleteField.Option value="3">\n        Option 3\n    </AutocompleteField.Option>\n</AutocompleteField>\n')),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"placeholder"},"Placeholder"),(0,a.kt)("p",null,"An example with placeholder using ",(0,a.kt)("inlineCode",{parentName:"p"},"placeholder")," prop."),(0,a.kt)(i.Z,{mdxType:"NewfoldRoot"},(0,a.kt)(F,{label:"Select an Option",placeholder:"A custom placeholder",mdxType:"AutocompleteFieldDemo"})),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'<AutocompleteField\n    id="autocomplete-field-select-placeholder"\n    onChange={handleChange}\n    onQueryChange={handleQueryChange}\n    value=""\n    label="Select an Option"\n    placeholder="A custom placeholder"\n>\n    <AutocompleteField.Option value="1">\n        Option 1\n    </AutocompleteField.Option>\n    <AutocompleteField.Option value="2">\n        Option 2\n    </AutocompleteField.Option>\n    <AutocompleteField.Option value="3">\n        Option 3\n    </AutocompleteField.Option>\n</AutocompleteField>\n')),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"selected-label"},"Selected Label"),(0,a.kt)("p",null,"An example with default value using ",(0,a.kt)("inlineCode",{parentName:"p"},"selectedLabel")," prop."),(0,a.kt)(i.Z,{mdxType:"NewfoldRoot"},(0,a.kt)(F,{label:"Select an Option",placeholder:"A custom placeholder",selectedLabel:"Option 2",value:"2",mdxType:"AutocompleteFieldDemo"})),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'<AutocompleteField\n    id="autocomplete-field-select-selected-label"\n    onChange={handleChange}\n    onQueryChange={handleQueryChange}\n    label="Select an Option"\n    placeholder="Type to autocomplete options"\n    value="2"\n    selectedLabel="Option 2"\n>\n    <AutocompleteField.Option value="1">\n        Option 1\n    </AutocompleteField.Option>\n    <AutocompleteField.Option value="2">\n        Option 2\n    </AutocompleteField.Option>\n    <AutocompleteField.Option value="3">\n        Option 3\n    </AutocompleteField.Option>\n</AutocompleteField>\n')),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"nullable"},"Nullable"),(0,a.kt)("p",null,"Allow empty values with reset button ",(0,a.kt)("inlineCode",{parentName:"p"},"X")," or deleting the option and clicking outside the field."),(0,a.kt)(i.Z,{mdxType:"NewfoldRoot"},(0,a.kt)(F,{label:"Select an Option",placeholder:"Type to autocomplete options",value:"2",selectedLabel:"Option 2",nullable:!0,mdxType:"AutocompleteFieldDemo"})),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'<AutocompleteField\n    id="autocomplete-field-select-nullable"\n    onChange={handleChange}\n    onQueryChange={handleQueryChange}\n    value=""\n    label="Select an Option"\n    placeholder="Type to autocomplete options"\n    selectedLabel=""\n>\n    <AutocompleteField.Option value="1">\n        Option 1\n    </AutocompleteField.Option>\n    <AutocompleteField.Option value="2">\n        Option 2\n    </AutocompleteField.Option>\n    <AutocompleteField.Option value="3">\n        Option 3\n    </AutocompleteField.Option>\n</AutocompleteField>\n')),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"onchange"},"onChange"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"onChange")," prop is a function that will be called when the value of the ",(0,a.kt)("inlineCode",{parentName:"p"},"AutocompleteField")," component changes.\nThe function will receive the new value of the ",(0,a.kt)("inlineCode",{parentName:"p"},"AutocompleteField")," component as a parameter."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'<AutocompleteField\n    id="autocomplete-field-select-onchange"\n    onChange={new_val => console.log(new_val)}\n    onQueryChange={handleQueryChange}\n>\n    <AutocompleteField.Option value="1">\n        Option 1\n    </AutocompleteField.Option>\n    <AutocompleteField.Option value="2">\n        Option 2\n    </AutocompleteField.Option>\n    <AutocompleteField.Option value="3">\n        Option 3\n    </AutocompleteField.Option>\n</AutocompleteField>\n')),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"onquerychange"},"onQueryChange"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"onQueryChange")," prop is a function that will be called when the query of the ",(0,a.kt)("inlineCode",{parentName:"p"},"AutocompleteField")," component changes.\nThe function will receive the new query event of the ",(0,a.kt)("inlineCode",{parentName:"p"},"AutocompleteField")," component as a parameter."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'<AutocompleteField\n    id="autocomplete-field-select-querychange"\n    onChange={(new_val) => console.log(new_val)}\n    onQueryChange={(event) => console.log(event.target.value)}\n>\n    <AutocompleteField.Option value="1">\n        Option 1\n    </AutocompleteField.Option>\n    <AutocompleteField.Option value="2">\n        Option 2\n    </AutocompleteField.Option>\n    <AutocompleteField.Option value="3">\n        Option 3\n    </AutocompleteField.Option>\n</AutocompleteField>\n')),(0,a.kt)("h3",{id:"validation"},"Validation"),(0,a.kt)(y,{mdxType:"AutocompleteFieldValidationVariants"}),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"props"},"Props"),(0,a.kt)(p.Z.Table,{docs:C}))}R.isMDXComponent=!0}}]);