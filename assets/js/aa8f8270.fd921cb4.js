"use strict";(self.webpackChunknewfold_ui_docs=self.webpackChunknewfold_ui_docs||[]).push([[8146],{2504:(e,t,n)=>{n.d(t,{Z:()=>i});var l=n(7294);const r={Table:e=>{let{children:t,docs:n}=e;const i=[],o=()=>!!(n&&"object"==typeof n&&Object.keys(n).length>0);return l.createElement("div",{className:"props-table"},l.createElement("table",null,l.createElement("thead",null,l.createElement("tr",null,l.createElement("th",null,"Attribute"),l.createElement("th",null,"Type"),l.createElement("th",null,"Description"),l.createElement("th",null,"Default"))),l.createElement("tbody",null,!t&&!o()&&l.createElement("div",{className:"empty-props"},"This component has no props."),(()=>{if(o())for(const e in n)if(n.hasOwnProperty(e)){const t=n[e];t.name=e,void 0===t.type&&(t.type=[]),void 0===t.description&&(t.description=""),void 0===t.defaultValue&&(t.defaultValue=""),void 0===t.isRequired&&(t.isRequired=!1),i.push(l.createElement(r.Row,{key:t.name,name:t.name,type:t.type,description:t.description,defaultValue:t.defaultValue,isRequired:t.isRequired}))}return i})(),t)))}};r.Row=e=>{let{name:t,type:n=[],description:r="-",defaultValue:i="-",isRequired:o=!1}=e;return t&&"string"==typeof t?l.createElement("tr",null,l.createElement("td",{className:"props-table-name-col"},"boolean"==typeof o&&o?l.createElement("span",{className:"required-prop"},t,l.createElement("sup",null,"*")):l.createElement("span",null,t)),l.createElement("td",{className:"props-table-types-col"},(()=>{let e=n;return"string"==typeof e&&(e=[e]),e.length>0?l.createElement(l.Fragment,null,e.map(((e,t)=>l.createElement(l.Fragment,{key:t},l.createElement("code",null,e),l.createElement("span",null," | "))))):l.createElement("span",null,"-")})()),l.createElement("td",{className:"props-table-description-col"},r&&"string"==typeof r&&""!==r?l.createElement("span",null,r):l.createElement("span",null,"-")),l.createElement("td",{className:"props-table-default-col"},i&&"string"==typeof i&&""!==i&&"-"!==i?l.createElement("code",null,i):l.createElement("span",null,"-"))):(console.warn("From: PropsTable.Row. Invalid prop name or missing required props: name."),null)};const i=r},9092:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>m,default:()=>y,frontMatter:()=>c,metadata:()=>d,toc:()=>h});var l=n(7462),r=(n(7294),n(3905)),i=n(2504),o=n(1629),a=n(5956),p=n(7299);const s={limit:{type:"number",description:"The maximum number of children to reveal on initial render.",isRequired:!0},children:{type:"node",isRequired:!0},renderButton:{type:"function",description:"Render the toggle button. Receives `show`, `toggle` and `ariaProps`.",isRequired:!0},initialShow:{type:"bool",description:"Whether to show the children initially.",defaultValue:"false"},id:{type:"string"}},c={},m="Children Limiter",d={unversionedId:"components/children-limiter",id:"components/children-limiter",title:"Children Limiter",description:"The ChildrenLimiter component is used to limit the number of children that are rendered.",source:"@site/docs/components/children-limiter.mdx",sourceDirName:"components",slug:"/components/children-limiter",permalink:"/npm-ui-component-library/docs/components/children-limiter",draft:!1,editUrl:"https://github.com/newfold-labs/npm-ui-component-library/docs/docs/components/children-limiter.mdx",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Checkbox Group",permalink:"/npm-ui-component-library/docs/components/checkbox-group"},next:{title:"Feature Upsell",permalink:"/npm-ui-component-library/docs/components/feature-upsell"}},u={},h=[{value:"Usage",id:"usage",level:3},{value:"Props",id:"props",level:3}],f={toc:h},k="wrapper";function y(e){let{components:t,...n}=e;return(0,r.kt)(k,(0,l.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"children-limiter"},"Children Limiter"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"ChildrenLimiter")," component is used to limit the number of children that are rendered.\nIt is useful for limiting the number of items in a list."),(0,r.kt)(o.Z,{mdxType:"NewfoldRoot"},(0,r.kt)(a.Z,{limit:5,renderButton:e=>{let{show:t,toggle:n,ariaProps:i}=e;return(0,r.kt)(p.ZP,(0,l.Z)({className:"nfd-my-1.5",onClick:n},i,{mdxType:"Button"}),t?"Show Less":"Show More")},mdxType:"ChildrenLimiter"},(0,r.kt)("p",null,"0"),(0,r.kt)("p",null,"1"),(0,r.kt)("p",null,"2"),(0,r.kt)("p",null,"3"),(0,r.kt)("p",null,"4"),(0,r.kt)("p",null,"5"),(0,r.kt)("p",null,"6"),(0,r.kt)("p",null,"7"),(0,r.kt)("p",null,"8"),(0,r.kt)("p",null,"9"))),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"usage"},"Usage"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'import { ChildrenLimiter } from "@newfold/ui-component-library";\n\n<ChildrenLimiter\n    limit={5}\n    renderButton={({ show, toggle, ariaProps }) => {\n        return (\n            <Button onClick={toggle} {...ariaProps}>\n                {show ? "Show Less" : "Show More"}\n            </Button>\n        );\n    }}\n>\n    <p>0</p>\n    <p>1</p>\n    <p>2</p>\n    <p>3</p>\n    <p>4</p>\n    <p>5</p>\n    <p>6</p>\n    <p>7</p>\n    <p>8</p>\n    <p>9</p>\n</ChildrenLimiter>\n')),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"props"},"Props"),(0,r.kt)(i.Z.Table,{docs:s}))}y.isMDXComponent=!0}}]);