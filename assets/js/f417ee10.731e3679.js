"use strict";(self.webpackChunknewfold_ui_docs=self.webpackChunknewfold_ui_docs||[]).push([[11],{5667:(e,n,a)=>{a.d(n,{Z:()=>d});var o=a(7294),l=a(4184),t=a.n(l),s=a(5697),r=a.n(s);const c=(0,o.forwardRef)((({as:e,className:n,label:a,children:l,...s},r)=>(0,o.createElement)(e,{ref:r,className:t()("nfd-label",n),...s},a||l||null))),i={label:r().string,children:r().string,as:r().elementType,className:r().string};c.propTypes=i,c.defaultProps={label:"",children:"",as:"label",className:""};const p=e=>(0,o.createElement)(c,{...e});p.propTypes=i,p.defaultProps=c.defaultProps,p.displayName="Label";const d=c},3033:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>N,contentTitle:()=>y,default:()=>G,frontMatter:()=>v,metadata:()=>C,toc:()=>_});var o=a(7462),l=a(7294),t=a(3905),s=a(2504),r=a(1629),c=a(4184),i=a.n(c),p=a(6486),d=a(5697),u=a.n(d),b=a(5667);const m=(0,l.forwardRef)((({id:e,name:n,value:a,label:o,disabled:t,className:s,...r},c)=>(0,l.createElement)("div",{className:i()("nfd-checkbox",t&&"nfd-checkbox--disabled",s)},(0,l.createElement)("input",{ref:c,type:"checkbox",id:e,name:n,value:a,disabled:t,className:"nfd-checkbox__input",...r}),(0,l.createElement)(b.Z,{htmlFor:e,className:"nfd-checkbox__label",label:o})))),h={id:u().string.isRequired,name:u().string.isRequired,value:u().string.isRequired,label:u().string.isRequired,className:u().string,disabled:u().bool};m.propTypes=h,m.defaultProps={className:""};const k=e=>(0,l.createElement)(m,{...e});k.propTypes=h,k.defaultProps=m.defaultProps,k.displayName="Checkbox";const g=m,f=({children:e=null,id:n="",name:a="",values:o=[],label:t="",description:s="",disabled:r=!1,options:c,onChange:d=p.noop,className:u="",...m})=>{const h=(0,l.useCallback)((({target:e})=>{if(e.checked&&!(0,p.includes)(o,e.value))return d([...o,e.value]);d((0,p.without)(o,e.value))}),[o,d]);return(0,l.createElement)("fieldset",{id:`checkbox-group-${n}`,className:i()("nfd-checkbox-group",r&&"nfd-checkbox-group--disabled",u)},(0,l.createElement)(b.Z,{as:"legend",className:"nfd-checkbox-group__label",label:t}),s&&(0,l.createElement)("div",{className:"nfd-checkbox-group__description"},s),(0,l.createElement)("div",{className:"nfd-checkbox-group__options"},e||c.map(((e,t)=>{const s=`checkbox-${n}-${t}`;return(0,l.createElement)(g,{key:s,id:s,name:a,value:e.value,label:e.label,checked:(0,p.includes)(o,e.value),disabled:r,onChange:h,...m})}))))};f.propTypes={children:u().node,id:u().string,name:u().string,values:u().arrayOf(u().string),label:u().string,disabled:u().bool,description:u().string,options:u().arrayOf(u().shape({value:u().string.isRequired,label:u().string.isRequired})),onChange:u().func,className:u().string},(f.Checkbox=g).displayName="CheckboxGroup.Checkbox";const x=f,v={},y="Checkbox Group",C={unversionedId:"components/checkboxGroup",id:"components/checkboxGroup",title:"Checkbox Group",description:"A simple checkbox group component.",source:"@site/docs/components/checkboxGroup.mdx",sourceDirName:"components",slug:"/components/checkboxGroup",permalink:"/npm-ui-component-library/docs/components/checkboxGroup",draft:!1,editUrl:"https://github.com/newfold-labs/npm-ui-component-library/docs/docs/components/checkboxGroup.mdx",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Card",permalink:"/npm-ui-component-library/docs/components/card"},next:{title:"ChildrenLimiter",permalink:"/npm-ui-component-library/docs/components/childrenLimiter"}},N={},_=[{value:"Usage",id:"usage",level:3},{value:"Variants",id:"variants",level:3},{value:"Props",id:"props",level:3}],w={toc:_},E="wrapper";function G(e){let{components:n,...a}=e;return(0,t.kt)(E,(0,o.Z)({},w,a,{components:n,mdxType:"MDXLayout"}),(0,t.kt)("h1",{id:"checkbox-group"},"Checkbox Group"),(0,t.kt)("p",null,"A simple checkbox group component."),(0,t.kt)(r.Z,{mdxType:"NewfoldRoot"},(0,t.kt)(x,{id:"checkbox-group",label:"A checkbox group",onChange:function(){},name:"name",description:"This is the description",options:[{label:"Option 1",value:"1"},{label:"Option 2",value:"2"},{label:"Option 3",value:"3"},{label:"Option 4",value:"4"}],values:["1","3"],mdxType:"CheckboxGroup"})),(0,t.kt)("hr",null),(0,t.kt)("h3",{id:"usage"},"Usage"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-jsx"},"<CheckboxGroup\n    id=\"checkbox-group\"\n    label=\"A checkbox group\"\n    onChange={function noRefCheck(){}}\n    name=\"name\"\n    options={[\n    {\n        label: 'Option 1',\n        value: '1'\n    },\n    {\n        label: 'Option 2',\n        value: '2'\n    },\n    {\n        label: 'Option 3',\n        value: '3'\n    },\n    {\n        label: 'Option 4',\n        value: '4'\n    }\n    ]}\n    values={[\n    '1','3'\n    ]}\n>\n</CheckboxGroup>\n")),(0,t.kt)("hr",null),(0,t.kt)("h3",{id:"variants"},"Variants"),(0,t.kt)("hr",null),(0,t.kt)("h3",{id:"props"},"Props"),(0,t.kt)(s.Z.Table,{docs:{children:{type:"node"},className:{type:"string",description:"Class attribute to add to the element",defaultValue:'""'},description:{type:"string",description:"Form element description for whole checkbox group",defaultValue:'""'},disabled:{type:"boolean",description:"Disabled flag",defaultValue:"false"},id:{type:"string",description:"Element id attribute",defaultValue:'""'},label:{type:"string",description:"Form label for whole checkbox group",defaultValue:'""'},name:{type:"string",description:"Element name",defaultValue:'""'},onChange:{type:"func",defaultValue:"noop",description:"Handler for when value changes"},options:{type:"Array of Objects",description:"The checkboxes destined for the group. [{value: string,label: string},...]"},values:{type:"Array of values",description:"Desired selected values matching the values of the options"}}}))}G.isMDXComponent=!0}}]);