"use strict";(self.webpackChunknewfold_ui_docs=self.webpackChunknewfold_ui_docs||[]).push([[233],{2384:(e,t,o)=>{o.d(t,{$:()=>p,w:()=>d});var n=o(7294),l=o(1471);const a=[{value:"1",label:"Option 1"},{value:"2",label:"Option 2"},{value:"3",label:"Option 3"}],p=e=>{let{label:t,selectedLabel:o="",placeholder:p="Type to autocomplete options",nullable:i=!1,validation:u}=e;const[c,m]=(0,n.useState)(null),[r,d]=(0,n.useState)(a);return n.createElement(l.Z,{id:"select-autocomplete",nullable:i,onChange:e=>m(e),onQueryChange:e=>{const{value:t}=e.target;if(!t)return d(a);const o=a.filter((e=>e.label.toLowerCase().includes(t.toLowerCase())));return d(o)},placeholder:p,value:c,selectedLabel:c?a.find((e=>e.value===c)).label:o,label:t,validation:u},r.map((e=>n.createElement(l.Z.Option,{key:e.value,value:e.value},e.label))))};var i=o(7462),u=o(3905),c=o(1629);const m={toc:[{value:"Success",id:"success",level:4},{value:"Warning",id:"warning",level:4},{value:"Info",id:"info",level:4},{value:"Error",id:"error",level:4}]},r="wrapper";function d(e){let{components:t,...o}=e;return(0,u.kt)(r,(0,i.Z)({},m,o,{components:t,mdxType:"MDXLayout"}),(0,u.kt)("h4",{id:"success"},"Success"),(0,u.kt)(c.Z,{mdxType:"NewfoldRoot"},(0,u.kt)(p,{label:"With validation of variant success",selectedLabel:"Success unlocked. Keep soaring!",validation:{variant:"success",message:"Success unlocked. Keep soaring!"},mdxType:"AutocompleteDemo"})),(0,u.kt)("pre",null,(0,u.kt)("code",{parentName:"pre",className:"language-jsx"},'<Autocomplete\n    id="autocomplete-input"\n    onChange={handleChange}\n    onQueryChange={handleQueryChange}\n    value=""\n    label="With validation of variant success"\n    placeholder="Type to autocomplete options"\n    selectedLabel="Success unlocked. Keep soaring!"\n    validation={{ \n        variant: "success", \n        message: "Success unlocked. Keep soaring!\'"\n    }}\n>\n    <Autocomplete.Option value="1">\n        Option 1\n    </Autocomplete.Option>\n    <Autocomplete.Option value="2">\n        Option 2\n    </Autocomplete.Option>\n    <Autocomplete.Option value="3">\n        Option 3\n    </Autocomplete.Option>\n</Autocomplete>\n')),(0,u.kt)("h4",{id:"warning"},"Warning"),(0,u.kt)(c.Z,{mdxType:"NewfoldRoot"},(0,u.kt)(p,{label:"With validation of variant warning",selectedLabel:"Caution: Proceed with care to avoid potential pitfalls.",validation:{variant:"warning",message:"Caution: Proceed with care to avoid potential pitfalls."},mdxType:"AutocompleteDemo"})),(0,u.kt)("pre",null,(0,u.kt)("code",{parentName:"pre",className:"language-jsx"},'<Autocomplete\n    id="autocomplete-input"\n    onChange={handleChange}\n    onQueryChange={handleQueryChange}\n    value=""\n    label="With validation of variant warning"\n    placeholder="Type to autocomplete options"\n    selectedLabel="Caution: Proceed with care to avoid potential pitfalls."\n    validation={{ \n        variant: "warning", \n        message: "Caution: Proceed with care to avoid potential pitfalls."\n    }}\n>\n    <Autocomplete.Option value="1">\n        Option 1\n    </Autocomplete.Option>\n    <Autocomplete.Option value="2">\n        Option 2\n    </Autocomplete.Option>\n    <Autocomplete.Option value="3">\n        Option 3\n    </Autocomplete.Option>\n</Autocomplete>\n')),(0,u.kt)("h4",{id:"info"},"Info"),(0,u.kt)(c.Z,{mdxType:"NewfoldRoot"},(0,u.kt)(p,{label:"With validation of variant info",selectedLabel:"Information: Knowledge is the key to empowerment.",validation:{variant:"info",message:"Information: Knowledge is the key to empowerment."},mdxType:"AutocompleteDemo"})),(0,u.kt)("pre",null,(0,u.kt)("code",{parentName:"pre",className:"language-jsx"},'<Autocomplete\n    id="autocomplete-input"\n    onChange={handleChange}\n    onQueryChange={handleQueryChange}\n    value=""\n    label="With validation of variant info"\n    placeholder="Type to autocomplete options"\n    selectedLabel="Information: Knowledge is the key to empowerment."\n    validation={{ \n        variant: "info", \n        message: "Information: Knowledge is the key to empowerment." \n    }}\n>\n    <Autocomplete.Option value="1">\n        Option 1\n    </Autocomplete.Option>\n    <Autocomplete.Option value="2">\n        Option 2\n    </Autocomplete.Option>\n    <Autocomplete.Option value="3">\n        Option 3\n    </Autocomplete.Option>\n</Autocomplete>\n')),(0,u.kt)("h4",{id:"error"},"Error"),(0,u.kt)(c.Z,{mdxType:"NewfoldRoot"},(0,u.kt)(p,{label:"With validation of variant error",selectedLabel:"Error: Connection lost. Please reconnect.",validation:{variant:"error",message:"Error: Connection lost. Please reconnect."},mdxType:"AutocompleteDemo"})),(0,u.kt)("pre",null,(0,u.kt)("code",{parentName:"pre",className:"language-jsx"},'<Autocomplete\n    id="autocomplete-input"\n    onChange={handleChange}\n    onQueryChange={handleQueryChange}\n    value=""\n    label="With validation of variant error"\n    placeholder="Type to autocomplete options"\n    selectedLabel="Error: Connection lost. Please reconnect."\n    validation={{ \n        variant: "error", \n        message: "Error: Connection lost. Please reconnect." \n    }}\n>\n    <Autocomplete.Option value="1">\n        Option 1\n    </Autocomplete.Option>\n    <Autocomplete.Option value="2">\n        Option 2\n    </Autocomplete.Option>\n    <Autocomplete.Option value="3">\n        Option 3\n    </Autocomplete.Option>\n</Autocomplete>\n')))}d.isMDXComponent=!0},8046:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>d,contentTitle:()=>m,default:()=>A,frontMatter:()=>c,metadata:()=>r,toc:()=>s});var n=o(7462),l=(o(7294),o(3905)),a=o(1629),p=o(1471),i=o(2504),u=o(2384);const c={},m="Autocomplete",r={unversionedId:"elements/autocomplete",id:"elements/autocomplete",title:"Autocomplete",description:"A simple autocomplete select component.",source:"@site/docs/elements/autocomplete.mdx",sourceDirName:"elements",slug:"/elements/autocomplete",permalink:"/npm-ui-component-library/docs/elements/autocomplete",draft:!1,editUrl:"https://github.com/newfold-labs/npm-ui-component-library/docs/docs/elements/autocomplete.mdx",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Alert",permalink:"/npm-ui-component-library/docs/elements/alert"},next:{title:"Badge",permalink:"/npm-ui-component-library/docs/elements/badge"}},d={},s=[{value:"Usage",id:"usage",level:3},{value:"Label",id:"label",level:3},{value:"Placeholder",id:"placeholder",level:3},{value:"Selected Label",id:"selected-label",level:3},{value:"Nullable",id:"nullable",level:3},{value:"Validation",id:"validation",level:3},{value:"Props",id:"props",level:3}],h={toc:s},v="wrapper";function A(e){let{components:t,...o}=e;return(0,l.kt)(v,(0,n.Z)({},h,o,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"autocomplete"},"Autocomplete"),(0,l.kt)("p",null,"A simple autocomplete select component."),(0,l.kt)(a.Z,{mdxType:"NewfoldRoot"},(0,l.kt)(u.$,{mdxType:"AutocompleteDemo"})),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"usage"},"Usage"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},'import { Autocomplete } from "@newfold/ui-component-library";\n\n<Autocomplete\n    id="autocomplete-input"\n    onChange={handleChange}\n    onQueryChange={handleQueryChange}\n    placeholder="Type to autocomplete options"\n    value=""\n>\n    <Autocomplete.Option value="1">\n        Option 1\n    </Autocomplete.Option>\n    <Autocomplete.Option value="2">\n        Option 2\n    </Autocomplete.Option>\n    <Autocomplete.Option value="3">\n        Option 3\n    </Autocomplete.Option>\n</Autocomplete>\n')),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"label"},"Label"),(0,l.kt)("p",null,"An example with a label using ",(0,l.kt)("inlineCode",{parentName:"p"},"label")," prop."),(0,l.kt)(a.Z,{mdxType:"NewfoldRoot"},(0,l.kt)(u.$,{label:"Select an Option",mdxType:"AutocompleteDemo"})),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},'<Autocomplete\n    id="autocomplete-input"\n    onChange={handleChange}\n    onQueryChange={handleQueryChange}\n    placeholder="Type to autocomplete options"\n    value=""\n    label="Select an Option"\n>\n    <Autocomplete.Option value="1">\n        Option 1\n    </Autocomplete.Option>\n    <Autocomplete.Option value="2">\n        Option 2\n    </Autocomplete.Option>\n    <Autocomplete.Option value="3">\n        Option 3\n    </Autocomplete.Option>\n</Autocomplete>\n')),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"placeholder"},"Placeholder"),(0,l.kt)("p",null,"An example with placeholder using ",(0,l.kt)("inlineCode",{parentName:"p"},"placeholder")," prop."),(0,l.kt)(a.Z,{mdxType:"NewfoldRoot"},(0,l.kt)(u.$,{label:"Select an Option",placeholder:"A custom placeholder",mdxType:"AutocompleteDemo"})),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},'<Autocomplete\n    id="autocomplete-input"\n    onChange={handleChange}\n    onQueryChange={handleQueryChange}\n    value=""\n    label="Select an Option"\n    placeholder="A custom placeholder"\n>\n    <Autocomplete.Option value="1">\n        Option 1\n    </Autocomplete.Option>\n    <Autocomplete.Option value="2">\n        Option 2\n    </Autocomplete.Option>\n    <Autocomplete.Option value="3">\n        Option 3\n    </Autocomplete.Option>\n</Autocomplete>\n')),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"selected-label"},"Selected Label"),(0,l.kt)("p",null,"An example with default value using ",(0,l.kt)("inlineCode",{parentName:"p"},"selectedLabel")," prop."),(0,l.kt)(a.Z,{mdxType:"NewfoldRoot"},(0,l.kt)(u.$,{label:"Select an Option",placeholder:"A custom placeholder",selectedLabel:"Option 2",value:"2",mdxType:"AutocompleteDemo"})),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},'<Autocomplete\n    id="autocomplete-input"\n    onChange={handleChange}\n    onQueryChange={handleQueryChange}\n    value="2"\n    label="Select an Option"\n    placeholder="Type to autocomplete options"\n    selectedLabel="Option 2"\n>\n    <Autocomplete.Option value="1">\n        Option 1\n    </Autocomplete.Option>\n    <Autocomplete.Option value="2">\n        Option 2\n    </Autocomplete.Option>\n    <Autocomplete.Option value="3">\n        Option 3\n    </Autocomplete.Option>\n</Autocomplete>\n')),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"nullable"},"Nullable"),(0,l.kt)("p",null,"Allow empty values with reset button ",(0,l.kt)("inlineCode",{parentName:"p"},"X")," or deleting the option and clicking outside the field."),(0,l.kt)(a.Z,{mdxType:"NewfoldRoot"},(0,l.kt)(u.$,{label:"Select an Option",placeholder:"Type to autocomplete options",nullable:!0,mdxType:"AutocompleteDemo"})),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},'<Autocomplete\n    id="autocomplete-input"\n    onChange={handleChange}\n    onQueryChange={handleQueryChange}\n    value=""\n    label="Select an Option"\n    placeholder="Type to autocomplete options"\n    selectedLabel=""\n>\n    <Autocomplete.Option value="1">\n        Option 1\n    </Autocomplete.Option>\n    <Autocomplete.Option value="2">\n        Option 2\n    </Autocomplete.Option>\n    <Autocomplete.Option value="3">\n        Option 3\n    </Autocomplete.Option>\n</Autocomplete>\n')),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"validation"},"Validation"),(0,l.kt)(u.w,{mdxType:"AutocompleteValidationVariants"}),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"props"},"Props"),(0,l.kt)(i.Z.Table,{docs:p.Z.docs}))}A.isMDXComponent=!0}}]);