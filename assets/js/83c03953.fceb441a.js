"use strict";(self.webpackChunknewfold_ui_docs=self.webpackChunknewfold_ui_docs||[]).push([[1533],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>f});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=u(n),m=o,f=p["".concat(c,".").concat(m)]||p[m]||d[m]||a;return n?r.createElement(f,i(i({ref:t},l),{},{components:n})):r.createElement(f,i({ref:t},l))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[p]="string"==typeof e?e:o,i[1]=s;for(var u=2;u<a;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8178:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>u});var r=n(7462),o=(n(7294),n(3905));const a={},i="useSvgAria",s={unversionedId:"hooks/useSvgAria",id:"hooks/useSvgAria",title:"useSvgAria",description:"The useSvgAria hook is designed to generate ARIA attributes for SVG elements. It accepts",source:"@site/docs/hooks/useSvgAria.mdx",sourceDirName:"hooks",slug:"/hooks/useSvgAria",permalink:"/npm-ui-component-library/docs/hooks/useSvgAria",draft:!1,editUrl:"https://github.com/newfold-labs/npm-ui-component-library/docs/docs/hooks/useSvgAria.mdx",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"useRootContext",permalink:"/npm-ui-component-library/docs/hooks/useRootContext"},next:{title:"useToggleState",permalink:"/npm-ui-component-library/docs/hooks/useToggleState"}},c={},u=[{value:"Usage",id:"usage",level:3}],l={toc:u},p="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(p,(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"usesvgaria"},"useSvgAria"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"useSvgAria")," hook is designed to generate ARIA attributes for SVG elements. It accepts\na boolean value to determine whether the SVG should be focusable and returns an object\ncontaining the ",(0,o.kt)("inlineCode",{parentName:"p"},"role")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"aria-hidden")," attributes. Optionally, it also includes the ",(0,o.kt)("inlineCode",{parentName:"p"},"focusable"),"\nattribute if specified."),(0,o.kt)("h3",{id:"usage"},"Usage"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},'import { useSvgAria } from from "@newfold/ui-component-library";\n\nconst Component = () => {\n    const ariaSvgProps = useSvgAria();\n\n    return (\n        <div>\n            <RandomIcon { ...ariaSvgProps } />\n        </div>\n    );\n};\n')))}d.isMDXComponent=!0}}]);